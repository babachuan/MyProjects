<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qhc.oa.mapper.AccountMapper">
    <resultMap id="BaseResultMap" type="com.qhc.oa.entity.Account">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="loginname" jdbcType="VARCHAR" property="loginname"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>
    </resultMap>


    <!--自定义结果集 ↓-->
    <resultMap id="selectByPermissionResultMap" type="com.qhc.oa.entity.Account">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="loginname" jdbcType="VARCHAR" property="loginname"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>

        <!--    这里对应bean里的List<Role>集合-->
<!--        <collection property="roles" ofType="com.qhc.oa.entity.Role">-->
        <collection property="roles" ofType="com.qhc.oa.entity.Role">
            <id column="rid" jdbcType="INTEGER" property="id"/>
            <result column="roleName" jdbcType="VARCHAR" property="rolename"/>
        </collection>

<!--        <collection property="permissions" ofType="com.qhc.oa.entity.Permission">-->
        <collection property="permissions" ofType="com.qhc.oa.entity.Permission">
            <id column="pid" jdbcType="INTEGER" property="id"/>
            <result column="pname" jdbcType="VARCHAR" property="pname"/>
            <result column="uri" jdbcType="VARCHAR" property="uri"/>
            <result column="c" jdbcType="INTEGER" property="c"/>
            <result column="r" jdbcType="INTEGER" property="r"/>
            <result column="u" jdbcType="INTEGER" property="u"/>
            <result column="d" jdbcType="INTEGER" property="d"/>
        </collection>
    </resultMap>
    <!--自定义结果集 ↑-->


<select id="selectByByLoginNameAndPasswordAll" resultMap="selectByPermissionResultMap">
<!--<select id="selectByByLoginNameAndPasswordAll" resultType="com.qhc.oa.entity.Account">-->
       SELECT
	act.id AS aid,
	act.loginname,
	act.`password` AS pwd,
	act.nickname,
	act.age,
	act.location,
	act.role,
	r.id AS rid,
	r.roleName,
	p.id AS pid,
	p.pname,
	p.c,
	p.r,
	p.u,
	p.d,
	p.uri
FROM
	account act
INNER JOIN account_role ar ON act.id = ar.account_id
LEFT JOIN role r ON (r.id = ar.role_id)
LEFT JOIN role_permission rp ON (rp.role_id = r.id)
LEFT JOIN permission p ON (p.id = rp.permission_id)
WHERE act.loginname=#{loginName} and act.password=#{password}
</select>

    <select id="selectByPermission" resultMap="selectByPermissionResultMap">
    SELECT
	act.id AS aid,
	act.loginname,
	act.`password` AS pwd,
	act.nickname,
	act.age,
	act.location,
	act.role,
	r.id AS rid,
	r.roleName,
	p.id AS pid,
	p.pname,
	p.c,
	p.r,
	p.u,
	p.d,
	p.uri
FROM
	account act
INNER JOIN account_role ar ON act.id = ar.account_id
LEFT JOIN role r ON (r.id = ar.role_id)
LEFT JOIN role_permission rp ON (rp.role_id = r.id)
LEFT JOIN permission p ON (p.id = rp.permission_id)
  </select>


    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, loginname, `password`, nickname, age, `location`, `role`
  </sql>
    <select id="selectByExample" parameterType="com.qhc.oa.mapper.AccountExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from account
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from account
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.qhc.oa.mapper.AccountExample">
        delete from account
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.qhc.oa.entity.Account"
            useGeneratedKeys="true">
    insert into account (loginname, `password`, nickname, 
      age, `location`, `role`
      )
    values (#{loginname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{location,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.qhc.oa.entity.Account"
            useGeneratedKeys="true">
        insert into account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="loginname != null">
                loginname,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="location != null">
                `location`,
            </if>
            <if test="role != null">
                `role`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="loginname != null">
                #{loginname,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="location != null">
                #{location,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.qhc.oa.mapper.AccountExample" resultType="java.lang.Long">
        select count(*) from account
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update account
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.loginname != null">
                loginname = #{record.loginname,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                `password` = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.nickname != null">
                nickname = #{record.nickname,jdbcType=VARCHAR},
            </if>
            <if test="record.age != null">
                age = #{record.age,jdbcType=INTEGER},
            </if>
            <if test="record.location != null">
                `location` = #{record.location,jdbcType=VARCHAR},
            </if>
            <if test="record.role != null">
                `role` = #{record.role,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update account
        set id = #{record.id,jdbcType=INTEGER},
        loginname = #{record.loginname,jdbcType=VARCHAR},
        `password` = #{record.password,jdbcType=VARCHAR},
        nickname = #{record.nickname,jdbcType=VARCHAR},
        age = #{record.age,jdbcType=INTEGER},
        `location` = #{record.location,jdbcType=VARCHAR},
        `role` = #{record.role,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.qhc.oa.entity.Account">
        update account
        <set>
            <if test="loginname != null">
                loginname = #{loginname,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="location != null">
                `location` = #{location,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                `role` = #{role,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.qhc.oa.entity.Account">
    update account
    set loginname = #{loginname,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      `location` = #{location,jdbcType=VARCHAR},
      `role` = #{role,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>